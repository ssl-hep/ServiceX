apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-servicex-app
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-servicex-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-servicex-app
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      serviceAccountName: {{ template "servicex.fullname" . }}
      {{- if .Values.postgres.enabled }}
      initContainers:
        - name: check-postgresql
          image: "ncsa/checks:latest"
          env:
            - name: PG_URI
              value: 'postgresql://{{  .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.postgresqlDatabase }}'
      {{- end }}
      containers:
      - name: {{ .Release.Name }}-servicex-app
        image: {{ .Values.app.image }}:{{ .Values.app.tag }}
        env:
        - name: APP_CONFIG_FILE
          value: "/opt/servicex/app.conf"
        - name: INSTANCE_NAME
          value: {{ .Release.Name }}
    {{- if .Values.secrets }}
        - name: GLOBUS_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: globusClientID
        - name: GLOBUS_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: globusClientSecret
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: secretKey
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: jwtSecretKey
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: minioAccessKey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: minioSecretKey
        - name: SLACK_SIGNING_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: slackSigningSecret
        - name: SIGNUP_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: slackSignupWebhook
        - name: MAILGUN_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: mailgunAPIKey
    {{- end }}
        tty: true
        stdin: true
        imagePullPolicy: {{ .Values.app.pullPolicy }}
        {{- if .Values.app.resources }}
        resources:
{{ toYaml .Values.app.resources | indent 10 }}
        {{- end }}

        volumeMounts:
          - name: app-cfg
            mountPath: /opt/servicex
          - name: sqlite
            mountPath: /sqlite

        ports:
          - containerPort: 5000

      volumes:
        - name: app-cfg
          configMap:
            name:  {{ .Release.Name }}-flask-config
        - name: sqlite
          emptyDir: {}
