{
	"info": {
		"_postman_id": "9003808e-201a-47d9-bf3a-3f0f715b93c9",
		"name": "ServiceXTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "submit transformation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12b3c129-2d3c-4bd4-aa5c-e3ee15056a9b",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData['request_id']);",
							"",
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"did\": \"mc15_13TeV:mc15_13TeV.361106.PowhegPythia8EvtGen_AZNLOCTEQ6L1_Zee.merge.DAOD_STDM3.e3601_s2576_s2132_r6630_r6264_p2363_tid05630052_00\",\n\t\"columns\": \"Electrons.pt(), Electrons.eta(), Electrons.phi(), Electrons.e(), Muons.pt(), Muons.eta(), Muons.phi(), Muons.e()\",\n\t\"image\": \"sslhep/servicex-transformer:downloadable\",\n\t\"result-destination\": \"kafka\",\n\t\"kafka\":{\n\t\t\"broker\": \"servicex-kafka-1.slateci.net:19092\"\n\t},\n\t\"chunk-size\": 7000,\n\t\"workers\": 1\n}\t"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation"
					]
				}
			},
			"response": []
		},
		{
			"name": "submit transformation to h5",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12b3c129-2d3c-4bd4-aa5c-e3ee15056a9b",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData['request_id']);",
							"",
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"did\": \"mc15_13TeV:mc15_13TeV.361106.PowhegPythia8EvtGen_AZNLOCTEQ6L1_Zee.merge.DAOD_STDM3.e3601_s2576_s2132_r6630_r6264_p2363_tid05630052_00\",\n\t\"columns\": \"Electrons.pt(), Electrons.eta(), Electrons.phi(), Electrons.e(), Muons.pt(), Muons.eta(), Muons.phi(), Muons.e()\",\n\t\"image\": \"sslhep/servicex-transformer:downloadable\",\n\t\"result-destination\": \"object-store\",\n\t\"result-format\": \"parquet\",\n\t\"chunk-size\": 7000,\n\t\"workers\": 0\n}\t"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation"
					]
				}
			},
			"response": []
		},
		{
			"name": "submit big transformation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12b3c129-2d3c-4bd4-aa5c-e3ee15056a9b",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData['request_id']);",
							"",
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"did\": \"data17_13TeV:data17_13TeV.periodK.physics_Main.PhysCont.DAOD_STDM7.grp22_v01_p3713\",\n\t\"columns\": \"Electrons.pt(), Electrons.eta(), Electrons.phi(), Electrons.e(), Muons.pt(), Muons.eta(), Muons.phi(), Muons.e()\",\n\t\"image\": \"sslhep/servicex-transformer:rabbitmq\",\n\t\"messaging-backend\": \"kafka\",\n\t\"kafka-broker\": \"servicex-kafka-1.slateci.net:19092\",\n\t\"chunk-size\": 7000,\n\t\"workers\": 25\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Transformation",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"did\": \"mc15_13TeV:mc15_13TeV.361106.PowhegPythia8EvtGen_AZNLOCTEQ6L1_Zee.merge.DAOD_STDM3.e3601_s2576_s2132_r6630_r6264_p2363_tid05630052_00\",\n\t\"columns\": \"Electrons.pt(), Electrons.eta(), Electrons.phi(), Electrons.e(), Muons.pt(), Muons.eta(), Muons.phi(), Muons.e()\",\n\t\"image\": \"sslhep/servicex-transformer:rabbitmq\",\n\t\"messaging-backend\": \"kafka\",\n\t\"kafka-broker\": \"servicex-kafka-1.slateci.net:19092\",\n\t\"chunk-size\": 9000,\n\t\"workers\": 100\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Transformations",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15c51ed2-8434-42e3-bff7-b50a009fca7c",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"did\": \"mc15_13TeV:mc15_13TeV.361106.PowhegPythia8EvtGen_AZNLOCTEQ6L1_Zee.merge.DAOD_STDM3.e3601_s2576_s2132_r6630_r6264_p2363_tid05630052_00\",\n\t\"columns\": \"Electrons.pt(), Electrons.eta(), Electrons.phi(), Electrons.e(), Muons.pt(), Muons.eta(), Muons.phi(), Muons.e()\",\n\t\"image\": \"sslhep/servicex-transformer:rabbitmq\",\n\t\"messaging-backend\": \"kafka\",\n\t\"kafka-broker\": \"servicex-kafka-1.slateci.net:19092\",\n\t\"chunk-size\": 9000,\n\t\"workers\": 100\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Request Preflight",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3011f086-2683-4d91-8a56-131a1fbbe144",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"timestamp\": \"2019-08-16T17:52:39.451950\",\n\t\"file_path\": \"root://xcache.mwt2.org:1094//root://dcache-atlas-xrootd.desy.de:1094//pnfs/desy.de/atlas/dq2/atlaslocalgroupdisk/rucio/mc15_13TeV/8a/f1/DAOD_STDM3.05630052._000001.pool.root.1\"\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id/preflight?:",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id",
						"preflight"
					],
					"query": [
						{
							"key": ":",
							"value": null
						}
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add File",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5139675e-3410-4dfa-9240-b6f17d90a496",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"timestamp\": \"2019-08-16T17:52:39.451950\",\n\t\"file_path\": \"root://xcache.mwt2.org:1094//root://dcache-atlas-xrootd.desy.de:1094//pnfs/desy.de/atlas/dq2/atlaslocalgroupdisk/rucio/mc15_13TeV/8a/f1/DAOD_STDM3.05630052._000001.pool.root.1\"\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id/files",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id",
						"files"
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fileset Complete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2910da52-de0e-44e1-a649-da65e5e8cfc6",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"timestamp\": '2019-08-16T17:52:39.451950',\n\t\"file_path\": \"root://xcache.mwt2.org:1094//root://dcache-atlas-xrootd.desy.de:1094//pnfs/desy.de/atlas/dq2/atlaslocalgroupdisk/rucio/mc15_13TeV/8a/f1/DAOD_STDM3.05630052._000001.pool.root.1\"\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id/complete",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id",
						"complete"
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Start Transformation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "950c8640-0b1b-4b79-9169-8af69b1433e4",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"max-event-size\": 1024,\n\t\"timestamp\": \"2019-08-16T17:52:39.451950\",\n\t\"file_path\": \"root://xcache.mwt2.org:1094//root://dcache-atlas-xrootd.desy.de:1094//pnfs/desy.de/atlas/dq2/atlaslocalgroupdisk/rucio/mc15_13TeV/8a/f1/DAOD_STDM3.05630052._000001.pool.root.1\"\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id/start",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id",
						"start"
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "File Complete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2910da52-de0e-44e1-a649-da65e5e8cfc6",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\t'status': 'success', \n\t'num-messages': 10, \n\t'total-time': 33.43976902961731, \n\t'file-path': '/data/AOD.11182705._000001.pool.root.1'\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id/file-complete",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id",
						"file-complete"
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2910da52-de0e-44e1-a649-da65e5e8cfc6",
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\t'status': 'success', \n\t'num-messages': 10, \n\t'total-time': 33.43976902961731, \n\t'file-path': '/data/AOD.11182705._000001.pool.root.1'\n}"
				},
				"url": {
					"raw": "{{host}}/servicex/transformation/:request_id/status",
					"host": [
						"{{host}}"
					],
					"path": [
						"servicex",
						"transformation",
						":request_id",
						"status"
					],
					"variable": [
						{
							"key": "request_id",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}