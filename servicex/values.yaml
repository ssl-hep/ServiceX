# Default values for servicex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# If this is provided, it must follow the example shown in example_secrets.yaml
# The chart will mount environment variables from here into the app.
secrets:

objectStore:
  # Enable use of ObjectStore for results.
  enabled: true

  # Enable deployment of Minio Object Store with this chart
  internal: true
  publicURL:
  # turn off https connections to minio, should be off if using internal
  # minio
  useTLS: false
  # set clients to use a https connection to connect to minio, should be
  # set to true unless using a devel setup
  publicClientUseTLS: true

# Enable deployment of a full postgres sql database. This is advisable for
# bigger clusters where there will be several workers hitting the database
# at the same time. If not, the service will use sqlite
postgres:
  enabled: false

logging:
  logstash:
    enabled: true
    host: servicex.atlas-ml.org
    port: 5959
    protocol: TCP

# Settings for the Flask App
app:
  image: sslhep/servicex_app
  tag: 20220831-0243-stable
  # log level can be set to DEBUG, INFO, WARNING, ERROR or FATAL
  logLevel: "WARNING"
  pullPolicy: Always

  checksImage: ncsa/checks:latest
  replicas: 1
  auth: false
  validateTransformerImage: true

  # Globus configuration - obtain these at https://auth.globus.org/v2/web/developers
  globusClientID:
  globusClientSecret:

  # Specify an email address for the first admin user
  adminEmail: admin@example.com

  # JWT remains valid for 6 hours
  tokenExpires: false
  authExpires: 21600

  # Mailgun configuration
  mailgunApiKey:
  mailgunDomain:

  # If user provides DID that lacks a schema, route the requests to this
  # particular DID Finder. If left blank, the template will try to guess this
  # giving Rucio a priority if available.
  defaultDIDFinderScheme:

  ingress:
    enabled: false
    class: nginx
    host: servicex.ssl-hep.org
    defaultBackend: default-http-backend
    tls:
      enabled: false
      secretName: "{{.Release.Name}}-app-tls"
      # Specify a ClusterIssuer if using cert-manager:
      clusterIssuer:

  # RabbitMQ can take up to one minute to start up. Simplify app startup by waiting for it
  rabbitmq:
    retries: 12
    # retry interval is in seconds
    retry_interval: 10

# Settings for the Rucio DID Finder
didFinder:
  rucio:
    enabled: false
    image: sslhep/servicex-did-finder
    tag: 20220831-0243-stable
    pullPolicy: Always
    rucio_host: https://voatlasrucio-server-prod.cern.ch:443
    auth_host: https://voatlasrucio-auth-prod.cern.ch:443
    servicex_latitude: 41.78
    servicex_longitude: -87.7
    cachePrefix:
    reportLogicalFiles: false
    memcache:
      enabled: false
      image: memcached
      tag: alpine
      ttl: 86400

  CERNOpenData:
    enabled: true
    image: sslhep/servicex-did-finder-cernopendata
    tag: 20220831-0243-stable
    pullPolicy: Always
    cachePrefix:

#
# Code Generator service
codeGen:
  enabled: true
  image: sslhep/servicex_code_gen_atlas_xaod
  # For uproot deployment
  # image: sslhep/servicex_code_gen_func_adl_uproot
  # for CMS Run 1 AOD OpenData
  # image: sslhep/servicex_code_gen_cms_aod
  tag: 20220831-0243-stable
  pullPolicy: Always

# Pull policy for the worker pods - the image and version are specified as
# part of the transform request
transformer:
  autoscaler:
    enabled: true
    cpuScaleThreshold: 30
    minReplicas: 1
    maxReplicas: 20
  pullPolicy: Always
  priorityClassName:
  cpuLimit: 1
  defaultTransformerImage: sslhep/servicex_func_adl_xaod_transformer
  defaultTransformerTag: 20220831-0243-stable

  # For enabling volume output destination for transformers. Supports attaching
  # an existing PVC to transformers
  persistence:
    existingClaim:

    # Make sure subdir has trailing slash
    subdir:

  # For uproot deployment
  #  defaultTransformerImage:  sslhep/servicex_func_adl_uproot_transformer
  #  defaultTransformerTag: 20220831-0243-stable

x509Secrets:
  image: sslhep/x509-secrets
  tag: 20220831-0243-stable
  pullPolicy: Always
  vomsOrg: atlas

  initImage: alpine:3.6
# Values for the RabbitMQ Chart
rabbitmq:
  # For easy testing we don't require PVs for rabbit
  persistence:
    enabled: false
  auth:
    password: leftfoot1
  # This is needed for Windows users
  volumePermissions:
    enabled: true

# Values for the Postgresql Chart
postgresql:
  global:
    postgresql:
      auth:
        postgresPassword: leftfoot1
        database: servicex
  primary:
    persistence:
      enabled: false

# Values for Minio Chart
minio:
  # For easy testing we don't require PVs for minio
  persistence:
    enabled: false
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 60
  auth:
    rootUser: miniouser
    rootPassword: leftfoot1

###### Settings for Authenticating with the CERN Infrastructure #######
noCerts: true
gridAccount: <your account>

rbacEnabled: true
